---
- name: Linux Workstation Setup
  hosts: all
  become: true
  environment:
    http_proxy: http://192.168.68.127:3128
    https_proxy: http://192.168.68.127:3128
  gather_facts: true

  vars_files:
    - vars/common_packages.yml
    - vars/common_flatpaks.yml

  pre_tasks:
    - name: Get my user
      ansible.builtin.set_fact:
        my_user: >-
          {{ lookup('env', 'SUDO_USER') if lookup('env', 'SUDO_USER') else
           lookup('env', 'USER') if lookup('env', 'USER') != 'root' else
           ansible_user }}
    - name: Print out user info
      ansible.builtin.debug:
        msg: "my_user: {{ my_user }}"

    - name: Set distribution fact for consistent naming
      ansible.builtin.set_fact:
        distro_name: >-
          {%- set ubuntu_distros = ['Ubuntu', 'Pop!_OS', 'Linux Mint', 'elementary OS'] -%}
          {%- set arch_distros = ['CachyOS', 'Manjaro', 'EndeavourOS'] -%}
          {%- if ansible_distribution in ubuntu_distros or 'ubuntu' in (ansible_distribution_like | default('')) | lower -%}
            ubuntu
          {%- elif ansible_distribution == 'Debian' -%}
            debian
          {%- elif ansible_os_family == 'Archlinux' or ansible_distribution in arch_distros -%}
            archlinux
          {%- else -%}
            {{ ansible_os_family | lower }}
          {%- endif -%}

    - name: Debug distribution detection
      ansible.builtin.debug:
        msg: |
          ansible_distribution: '{{ ansible_distribution }}'
          ansible_os_family: '{{ ansible_os_family }}'
          distro_name: '{{ distro_name }}'

    - name: Load OS-specific variables
      ansible.builtin.include_vars: "vars/{{ distro_name }}.yml"

    - name: Disk usage at start
      ansible.builtin.command: df -h /
      register: disk_start
      changed_when: false
    - name: Show disk usage at start
      ansible.builtin.debug:
        msg: "{{ disk_start.stdout_lines }}"

    - name: Update apt cache (Ubuntu/Debian)
      ansible.builtin.apt:
        update_cache: true
      when: ansible_os_family == 'Debian' or ansible_os_family == 'Ubuntu'

    - name: Install python-apt (Ubuntu/Debian)
      ansible.builtin.apt:
        name: python3-apt
        state: present
      when: ansible_os_family == 'Debian' or ansible_os_family == 'Ubuntu'

    - name: Update pacman cache (Archlinux)
      community.general.pacman:
        update_cache: true
      when: ansible_os_family == 'Archlinux'

    - name: Install distro specific packages
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop: "{{ distro_packages }}"

    - name: Install common packages
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop: "{{ common_distro_packages }}"

  tasks: []

  roles:
    - containerization
    - package_management
    - dotfiles
    - desktop

  post_tasks:
    - name: Disk usage at end
      ansible.builtin.command: df -h /
      register: disk_end
      changed_when: false
    - name: Show disk usage at end
      ansible.builtin.debug:
        msg: "{{ disk_end.stdout_lines }}"
