---
# Main entry point for dotfiles role
- name: Install yadm
  ansible.builtin.package:
    name: yadm
    state: present
  become: true

- name: Check if yadm repo is already cloned
  ansible.builtin.stat:
    path: "/home/{{ my_user }}/.local/share/yadm/repo.git"
  register: dotfiles_yadm_repo_check

- name: Clone dotfiles repository with yadm (first time)
  ansible.builtin.command: yadm clone https://github.com/apnea/dotfiles
  become: true
  become_user: "{{ my_user }}"
  when: not dotfiles_yadm_repo_check.stat.exists
  register: dotfiles_yadm_clone_result
  changed_when: dotfiles_yadm_clone_result.rc == 0
  failed_when: false

- name: Force clone if clone failed due to existing repo
  ansible.builtin.command: yadm clone -f https://github.com/apnea/dotfiles
  become: true
  become_user: "{{ my_user }}"
  when:
    - not dotfiles_yadm_repo_check.stat.exists
    - dotfiles_yadm_clone_result is defined
    - dotfiles_yadm_clone_result.rc != 0
    - "'Git repo already exists' in dotfiles_yadm_clone_result.stderr"
  register: dotfiles_yadm_force_clone_result
  changed_when: dotfiles_yadm_force_clone_result.rc == 0

- name: Update dotfiles repository if already exists
  ansible.builtin.command: yadm pull
  become: true
  become_user: "{{ my_user }}"
  when: dotfiles_yadm_repo_check.stat.exists
  register: dotfiles_yadm_pull_result
  changed_when: "'Already up to date' not in dotfiles_yadm_pull_result.stdout"
  failed_when: false

- name: Ensure ~/.local/mybin directory exists
  ansible.builtin.file:
    path: "/home/{{ my_user }}/.local/mybin"
    state: directory
    mode: '0755'
    owner: "{{ my_user }}"
    group: "{{ my_user }}"
  become: true

- name: Add ~/.local/mybin to PATH in .bashrc
  ansible.builtin.lineinfile:
    path: "/home/{{ my_user }}/.bashrc"
    line: 'export PATH="$HOME/.local/mybin:$PATH"'
    regexp: '^export PATH=.*\.local/mybin'
    create: true
    mode: '0644'
    owner: "{{ my_user }}"
    group: "{{ my_user }}"
  become: true

- name: Download Starship install script
  ansible.builtin.get_url:
    url: https://starship.rs/install.sh
    dest: /tmp/starship_install.sh
    mode: '0755'
  become: true

- name: Install Starship
  ansible.builtin.command: /tmp/starship_install.sh
  become: true
  become_user: "{{ my_user }}"
  args:
    creates: /usr/local/bin/starship
